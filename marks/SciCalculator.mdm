{
"chain": 3,
"contracts": [
{
"name": "tally",
"address": "0x2b9c9322ac9aa3caab563b146677d5335654f11f",
"ipfs": "QmZmu5kTmf5ZcQuKCAibBctUrqxmkNiPxjh5xX9XkarNWR"
}
],
"content": "\n:::center\n\n# Scientific Calculator\n\n*(only ropsten)*\n\n::Input[]{label=\"number_a_user\" placeholder=\"a:number\"}\n::Input[]{label=\"number_b_user\" placeholder=\"b:number\"}\n::Input[]{label=\"number_c_user\" placeholder=\"c:number\"}\n\n-----\n\n::Input[]{label=\"answer\" placeholder=\"answer:number\"}\n\n------\n\n|  |  |  |  |\n| -------- | -------- | -------- | -------- |\n| :Contract[]{name=\"tally\" function=\"add\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"sub\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"mul\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"div\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} |\n| :Contract[]{name=\"tally\" function=\"mod\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"_addmod\" input=\"number_a,number_b,number_c\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"_mulmod\" input=\"number_a,number_b,number_c\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"abs\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} |\n| :Contract[]{name=\"tally\" function=\"lt\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"gt\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"eq\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"isZero\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} |\n| :Contract[]{name=\"tally\" function=\"isOne\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"isNeg\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"isEven\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"isOdd\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} |\n| :Contract[]{name=\"tally\" function=\"and\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"or\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"xor\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} | :Contract[]{name=\"tally\" function=\"not\" input=\"number_a,number_b\" output=\"answer_raw\" hidden=\"input,output\"} |\n\n------\n\nTally is an arbitrary precision arithmetic library for both the Ethereum Virtual Machine and JavaScript.\nThis example is testing the Tally smart contract deployed on Ropsten.\nThe interface for scientific calculator is complex enough to show the flexibility of the Marks Factory.\n\nThis is a demo of tally in action:\n\n::Video[]{src=\"https://www.youtube.com/embed/N8Es2iPLGzY\" width=\"560\" height=\"315\"}\n\n\n:::\n\n\n::Text[]{label=\"number_a\" input=\"number_a_user\" command=\"dec-to-u128\" hidden=true}\n::Text[]{label=\"number_b\" input=\"number_b_user\" command=\"dec-to-u128\" hidden=true}\n::Text[]{label=\"number_c\" input=\"number_c_user\" command=\"dec-to-u128\" hidden=true}\n\n\n\n::Text[]{label=\"answer_raw\" hidden=true}\n::Text[]{label=\"answer\" command=\"u128-to-dec\" input=\"answer_raw\" hidden=true}\n\n\n\n"
}
